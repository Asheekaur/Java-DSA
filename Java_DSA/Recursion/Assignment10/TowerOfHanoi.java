/*
ðŸ’¡ **Question 6**

TheÂ [tower of Hanoi](https://en.wikipedia.org/wiki/Tower_of_Hanoi)Â is a famous puzzle where we have three rods andÂ **N**Â disks. The objective of the puzzle is to move the entire stack to another rod. You are given the number of discsÂ **N**. Initially, these discs are in the rod 1. You need to print all the steps of discs movement so that all the discs reach the 3rdÂ rod. Also, you need to find the total moves.**Note:**Â The discs are arranged such that theÂ **top disc is numbered 1**Â and theÂ **bottom-most disc is numbered N**. Also, all the discs haveÂ **different sizes**Â and a bigger discÂ **cannot**Â be put on the top of a smaller disc. Refer the provided link to get a better clarity about the puzzle.

**Example 1:**
Input:
N = 2
Output:
move disk 1 from rod 1 to rod 2
move disk 2 from rod 1 to rod 3
move disk 1 from rod 2 to rod 3
3
Explanation:For N=2Â , steps will be
as follows in the example and total
3 steps will be taken.

*/

package Java_DSA.Recursion.Assignment10;

public class TowerOfHanoi {
    public static void towerOfHanoi(int n, char source, char auxiliary, char destination) {
        if (n == 1) {
            System.out.println("Move disc 1 from " + source + " to " + destination);
            return;
        }
        
        towerOfHanoi(n - 1, source, destination, auxiliary);
        System.out.println("Move disc " + n + " from " + source + " to " + destination);
        towerOfHanoi(n - 1, auxiliary, source, destination);
    }

    public static void main(String[] args) {
        // Test case
        int n = 3;
        towerOfHanoi(n, 'A', 'B', 'C');
    }
}
